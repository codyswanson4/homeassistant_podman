---
- name: Ensure Required Software
  ansible.builtin.package:
    name:
      - podman
    state: latest
- name: Ensure Containers Group
  ansible.builtin.group:
    name: containers
    state: present
- name: Ensure Home Assistant Group
  ansible.builtin.group:
    name: homeassistant
    state: present
- name: Add User
  ansible.builtin.user:
    group: homeassistant
    home: "{{home_dir}}"
    name: homeassistant
    state: present
- name: Ensure podman volume
  containers.podman.podman_volume:
    name: homeassistant
    state: present
- name: Ensure user service location
  ansible.builtin.file:
    group: containers
    mode: 0770
    owner: homeassistant
    path: "{{home_dir}}/.config/systemd/user"
    state: directory
- name: Install systemd unit
  ansible.builtin.template:
    src: "{{item}}"
    dest: "{{home_dir}}/.config/systemd/user/{{item|basename|regex_replace('(^.*)\\.j2', '\\1')}}"
    owner: homeassistant
    group: containers
    mode: 0640
  with_fileglob: "templates/*.service.j2"
  register: unit_install
- name: Ensure config file location
  ansible.builtin.file:
    group: containers
    mode: 0770
    owner: homeassistant
    path: "{{config_dir}}"
    state: directory
- name: Check if user linger is enabled
  stat:
    path: "/var/lib/systemd/linger/homeassistant"
  register: user_lingering
- name: Enable lingering if needed
  command: "loginctl enable-linger homeassistant"
  when: not user_lingering.stat.exists
- ansible.builtin.wait_for:
    timeout: 5
- name: Reload Systemd Daemon
  ansible.builtin.command: systemctl --user -M homeassistant@ daemon-reload
  when: unit_install is changed
- name: Enable Home Assistant services
  ansible.builtin.command: systemctl --user -M homeassistant@ enable {{item}}
  with_items:
    - homeassistant
- name: Restart Home Assistant services
  ansible.builtin.command: systemctl --user -M homeassistant@ restart {{item}}
  with_items:
    - homeassistant
  when:
    - unit_install is changed
    - not user_lingering.stat.exists
